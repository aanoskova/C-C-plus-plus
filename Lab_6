Лабораторная работа №6
Дан двумерный массив размерности N*M. Отсортировать по возрастанию те строки, 
в которых нет положительных элементов. Вывести получившуюся на экран.

#include <locale.h>
#include <stdio.h>
#define _CRT_SECURE_NO_WARNINGS

    int function(int array[100], int m) {
        // Сортировка строки по возрастанию методом пузырька
        for (int i = 0; i < m - 1; i++) {
            for (int j = 0; j < m - i - 1; j++) {
                if (array[j] > array[j + 1]) {
                    // Меняем элементы местами
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
        return 0; // Возвращаем 0 для обозначения успешного выполнения
    }

    int main() {
        setlocale(LC_ALL, "Russian");
        int array[100][100]; // Объявление двумерного массива
        int N, M;

        // Считываем размеры массива
        printf("Введите количество строк (N): ");
        scanf_s("%d", &N);
        printf("Введите количество столбцов (M): ");
        scanf_s("%d", &M);

        // Считываем элементы массива
        printf("Введите элементы массива:\n");
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                scanf_s("%d", &array[i][j]);
            }
        }

        // Сортируем строки без положительных элементов
        for (int i = 0; i < N; i++) {
            int hasPositive = 0;
            for (int j = 0; j < M; j++) {
                if (array[i][j] > 0) {
                    hasPositive = 1; // Если найден положительный элемент
                    break;
                }
            }
            // Если строка не содержит положительных элементов, сортируем её
            if (!hasPositive) {
                function(array[i], M); // Вызываем функцию для сортировки строки
            }
        }

        // Выводим получившуюся матрицу
        printf("Полученная матрица:\n");
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                printf("%d ", array[i][j]);
            }
            printf("\n");
        }

        return 0; // Завершение программы
    }
